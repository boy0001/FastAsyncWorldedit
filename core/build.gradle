repositories {
    flatDir {dirs 'lib'}
}
dependencies {
    testCompile 'junit:junit:4.12'
    compile 'org.yaml:snakeyaml:1.16'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'net.fabiozumbi12:redprotect:1.9.6'
    compile 'com.sk89q:worldguard:6.0.0-SNAPSHOT'
    compile group: "com.plotsquared", name: "plotsquared-api", version: "latest"
    compile 'org.primesoft:BlocksHub:2.0'
    compile 'com.github.luben:zstd-jni:1.1.1'
//    compile 'org.javassist:javassist:3.22.0-CR1'
    compile 'co.aikar:fastutil-lite:1.0'
    compile(group: 'com.sk89q.worldedit', name: 'worldedit-core', version:'6.1.3-SNAPSHOT') {
        exclude(module: 'bukkit-classloader-check')
    }
    compile 'org.inventivetalent:mapmanager:1.4.0-SNAPSHOT'
}

compileJava {
  options.encoding = "UTF-8"
}

processResources {
    from('src/main/resources') {
        include 'fawe.properties'
        expand(
                version: "${project.parent.version}",
                name: project.parent.name,
        )
    }
}

jar.archiveName="fawe-api-${project.parent.version}.jar"
jar.destinationDir = file '../mvn/com/boydti/fawe-api/' + project.parent.version
task createPom << {
    pom {
        project {
            groupId 'com.boydti'
            artifactId 'fawe-api'
            version project.parent.version
        }
    }
    .getEffectivePom()
    .setDependencies(new ArrayList<>())
    .writeTo("../mvn/com/boydti/fawe-api/${project.parent.version}/fawe-api-${project.parent.version}.pom")
    pom {
        project {
            groupId 'com.boydti'
            artifactId 'fawe-api'
            version 'latest'
        }
    }
    .getEffectivePom()
    .setDependencies(new ArrayList<>())
    .writeTo("../mvn/com/boydti/fawe-api/latest/fawe-api-latest.pom")
}

task copyFiles {
    doLast {
        copy {
            from "../mvn/com/boydti/fawe-api/${project.parent.version}/"
            into '../mvn/com/boydti/fawe-api/latest/'
            include('*.jar')
            rename ("fawe-api-${project.parent.version}.jar", 'fawe-api-latest.jar')
        }
    }
}

build.finalizedBy(copyFiles)
copyFiles.dependsOn(createPom)